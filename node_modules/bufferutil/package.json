{
  "_from": "bufferutil",
  "_id": "bufferutil@3.0.3",
  "_inBundle": false,
  "_integrity": "sha512-o7zTFxMkM/hujDmJKJEeK4N/NYwO3spQ7sfVjjt6Twpkpmw265WbugtpQBGY2+ZHwfqJkf++7Hfn/eWSMzbx5A==",
  "_location": "/bufferutil",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bufferutil",
    "fetchSpec": "latest",
    "name": "bufferutil",
    "raw": "bufferutil",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/bufferutil/-/bufferutil-3.0.3.tgz",
  "_shasum": "ce67caefde2282591e399528467fe623f68f4bd5",
  "_shrinkwrap": null,
  "_spec": "bufferutil",
  "_where": "C:\\Users\\Casey\\Desktop\\musicbot",
  "author": {
    "email": "einaros@gmail.com",
    "name": "Einar Otto Stangvik",
    "url": "http://2x.io"
  },
  "bugs": {
    "url": "https://github.com/websockets/bufferutil/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bindings": "~1.3.0",
    "nan": "~2.7.0",
    "prebuild-install": "~2.3.0"
  },
  "deprecated": false,
  "description": "WebSocket buffer utils",
  "devDependencies": {
    "mocha": "~4.0.0",
    "prebuild": "~6.2.0",
    "prebuild-ci": "~2.2.0"
  },
  "homepage": "https://github.com/websockets/bufferutil",
  "keywords": [
    "bufferutil"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "bufferutil",
  "optionalDependencies": {},
  "readme": "# bufferutil\n\n[![Version npm](https://img.shields.io/npm/v/bufferutil.svg)](https://www.npmjs.com/package/bufferutil)\n[![Linux/macOS Build](https://travis-ci.org/websockets/bufferutil.svg?branch=master)](https://travis-ci.org/websockets/bufferutil)\n[![Windows Build](https://ci.appveyor.com/api/projects/status/github/websockets/bufferutil?branch=master&svg=true)](https://ci.appveyor.com/project/lpinca/bufferutil)\n\n`bufferutil` is what makes `ws` fast. It provides some utilities to efficiently\nperform some operations such as masking and unmasking the data payload of\nWebSocket frames.\n\n## Installation\n\n```\nnpm install bufferutil --save-optional\n```\n\nThe `--save-optional` flag tells npm to save the package in your package.json\nunder the [`optionalDependencies`](https://docs.npmjs.com/files/package.json#optionaldependencies)\nkey.\n\n## API\n\nThe module exports two functions.\n\n### `bufferUtil.mask(source, mask, output, offset, length)`\n\nMasks a buffer using the given masking-key as specified by the WebSocket\nprotocol.\n\n#### Arguments\n\n- `source` - The buffer to mask.\n- `mask` - A buffer representing the masking-key.\n- `output` - The buffer where to store the result.\n- `offset` - The offset at which to start writing.\n- `length` - The number of bytes to mask.\n\n#### Example\n\n```js\n'use strict';\n\nconst bufferUtil = require('bufferutil');\nconst crypto = require('crypto');\n\nconst source = crypto.randomBytes(10);\nconst mask = crypto.randomBytes(4);\n\nbufferUtil.mask(source, mask, source, 0, source.length);\n```\n\n### `bufferUtil.unmask(buffer, mask)`\n\nUnmasks a buffer using the given masking-key as specified by the WebSocket\nprotocol.\n\n#### Arguments\n\n- `buffer` - The buffer to unmask.\n- `mask` - A buffer representing the masking-key.\n\n#### Example\n\n```js\n'use strict';\n\nconst bufferUtil = require('bufferutil');\nconst crypto = require('crypto');\n\nconst buffer = crypto.randomBytes(10);\nconst mask = crypto.randomBytes(4);\n\nbufferUtil.unmask(buffer, mask);\n```\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/websockets/bufferutil.git"
  },
  "scripts": {
    "install": "prebuild-install || node-gyp rebuild",
    "test": "mocha && prebuild-ci"
  },
  "version": "3.0.3"
}
